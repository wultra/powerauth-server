#
# PowerAuth Server and related software components
# Copyright (C) 2018 Wultra s.r.o.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Allow externalization of properties using application-ext.properties
spring.profiles.active=ext

# Database Configuration - PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/powerauth
spring.datasource.username=powerauth
spring.datasource.password=
spring.datasource.hikari.auto-commit=false
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Database Configuration - Oracle
#spring.datasource.url=jdbc:oracle:thin:@//127.0.0.1:1521/powerauth
#spring.datasource.username=powerauth
#spring.datasource.password=
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=none

# PowerAuth Service Configuration
powerauth.service.applicationName=powerauth-server
powerauth.service.applicationDisplayName=PowerAuth Server
powerauth.service.applicationEnvironment=
powerauth.service.restrictAccess=false

# PowerAuth Service Crypto Configuration
powerauth.service.crypto.generateActivationIdIterations=10
powerauth.service.crypto.generateTokenIdIterations=10
powerauth.service.crypto.generateActivationCodeIterations=10
powerauth.service.crypto.generateRecoveryCodeIterations=10
powerauth.service.crypto.generateOperationIterations=10
powerauth.service.crypto.activationValidityInMilliseconds=300000
powerauth.service.crypto.signatureMaxFailedAttempts=5
powerauth.service.crypto.signatureValidationLookahead=20
powerauth.service.crypto.offlineSignatureComponentLength=8
powerauth.service.crypto.requestExpirationInMilliseconds=60000
powerauth.service.crypto.requestExpirationInMillisecondsExtended=7200000
powerauth.service.crypto.replayVerificationService=default

# HTTP Proxy Settings
powerauth.service.http.proxy.enabled=false
powerauth.service.http.proxy.host=127.0.0.1
powerauth.service.http.proxy.port=8080
powerauth.service.http.proxy.username=
powerauth.service.http.proxy.password=

# HTTP Connection Configuration
# Without unit bind to milliseconds
powerauth.service.http.connection.timeout=5000
powerauth.service.http.response.timeout=60s
powerauth.service.http.connection.max-idle-time=200s

# Token Timestamp Validity in Milliseconds
powerauth.service.token.timestamp.validity=7200000
powerauth.service.token.timestamp.forward.validity=1800000

# Recovery Code Configuration
powerauth.service.recovery.maxFailedAttempts=5

# Vault Unlock behavior
powerauth.service.secureVault.enableBiometricAuthentication=false

# PowerAuth Service Scheduled Jobs
powerauth.service.scheduled.job.operationCleanup=5000
powerauth.service.scheduled.job.activationsCleanup=5000
powerauth.service.scheduled.job.activationsCleanup.lookBackInMilliseconds=3600000
powerauth.service.scheduled.job.uniqueValueCleanup=60000

# Database Lock Timeout Configuration
spring.jpa.properties.jakarta.persistence.lock.timeout=10000

# Set JMX default domain in case JMX is enabled, otherwise the application startup fails due to clash in JMX bean names
spring.jmx.default-domain=powerauth-java-server

# Master DB encryption key for decryption of server private key in database, use empty value for no encryption
powerauth.server.db.master.encryption.key=

# Disable open session in view to avoid startup warning of Spring boot
spring.jpa.open-in-view=false

# Disable swagger-ui default petstore url
springdoc.swagger-ui.disable-swagger-default-url=true

# Set the Spring Boot application name
spring.application.name=powerauth-java-server

# Configure Spring Cloud Vault Properties
spring.cloud.vault.enabled=false
spring.cloud.vault.kv.enabled=true

# Configure Spring Pageable properties
powerauth.service.pagination.default-page-size=1000
powerauth.service.pagination.default-page-number=0

# Configure Correlation HTTP Header
powerauth.service.correlation-header.enabled=false
powerauth.service.correlation-header.name=X-Correlation-ID
powerauth.service.correlation-header.value.validation-regexp=[a-zA-Z0-9\\-]{8,1024}
# For logging correlation HTTP headers enable the pattern and update correlation header name in the pattern
#logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) [%X{X-Correlation-ID}] %clr(%5p) %clr(${PID: }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

powerauth.service.proximity-check.otp.length=8
