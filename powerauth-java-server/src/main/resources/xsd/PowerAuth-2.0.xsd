<?xml version="1.0"?>
<!--
  ~ PowerAuth Server and related software components
  ~ Copyright (C) 2018 Wultra s.r.o.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published
  ~ by the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<xs:schema version="1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:tns="http://getlime.io/security/powerauth/v2"
           targetNamespace="http://getlime.io/security/powerauth/v2"
           elementFormDefault="qualified">

    <!-- Exchange public keys //-->

    <xs:element name="PrepareActivationRequest">
        <xs:annotation>
            <xs:documentation>Request for client-server key exchange procedure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="activationIdShort" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="activationName" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:element name="extras" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:element name="activationNonce" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="ephemeralPublicKey" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:element name="encryptedDevicePublicKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="applicationKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="applicationSignature" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="PrepareActivationResponse">
        <xs:annotation>
            <xs:documentation>Response for client-server key exchange procedure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="activationId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="activationNonce" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="ephemeralPublicKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="encryptedServerPublicKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="encryptedServerPublicKeySignature" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Create new activation directly //-->

    <xs:element name="CreateActivationRequest">
        <xs:annotation>
            <xs:documentation>Request for creating a new activation directly.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="userId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="applicationId" type="xs:long" minOccurs="1" maxOccurs="1"/>
                <xs:element name="timestampActivationExpire" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
                <xs:element name="maxFailureCount" type="xs:long" minOccurs="0" maxOccurs="1"/>
                <xs:element name="identity" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="activationOtp" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="activationName" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:element name="extras" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:element name="activationNonce" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="ephemeralPublicKey" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:element name="encryptedDevicePublicKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="applicationKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="applicationSignature" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="CreateActivationResponse">
        <xs:annotation>
            <xs:documentation>Response for creating a new activation directly.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="activationId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="activationNonce" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="ephemeralPublicKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="encryptedServerPublicKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="encryptedServerPublicKeySignature" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Vault Unlock //-->

    <xs:element name="VaultUnlockRequest">
        <xs:annotation>
            <xs:documentation>Request for the vault unlock procedure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="activationId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="applicationKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="data" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="signature" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="signatureType" type="tns:SignatureType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="reason" type="xs:string" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="VaultUnlockResponse">
        <xs:annotation>
            <xs:documentation>Response for the vault unlock procedure.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="activationId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="userId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="activationStatus" type="tns:ActivationStatus" minOccurs="1" maxOccurs="1"/>
                <xs:element name="blockedReason" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:element name="remainingAttempts" type="xs:integer" minOccurs="1" maxOccurs="1"/>
                <xs:element name="signatureValid" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
                <xs:element name="encryptedVaultEncryptionKey" type="xs:string" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Non-personalized End-to-End Encryption Support //-->

    <xs:element name="GetNonPersonalizedEncryptionKeyRequest">
        <xs:annotation>
            <xs:documentation>Request for obtaining a derived end-to-end encryption key for non-personalized
                encryption.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="applicationKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="sessionIndex" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:element name="ephemeralPublicKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="GetNonPersonalizedEncryptionKeyResponse">
        <xs:annotation>
            <xs:documentation>Response for obtaining a derived end-to-end encryption key for non-personalized
                encryption.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="applicationKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="applicationId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="encryptionKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="encryptionKeyIndex" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="ephemeralPublicKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- End-to-End Encryption Support //-->

    <xs:element name="GetPersonalizedEncryptionKeyRequest">
        <xs:annotation>
            <xs:documentation>Request for obtaining a derived personalized end-to-end encryption key.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="activationId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="sessionIndex" type="xs:string" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="GetPersonalizedEncryptionKeyResponse">
        <xs:annotation>
            <xs:documentation>Response for obtaining a derived personalized end-to-end encryption key.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="activationId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="encryptionKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="encryptionKeyIndex" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Token Based Authentication Support //-->

    <xs:element name="CreateTokenRequest">
        <xs:annotation>
            <xs:documentation>Request for obtaining a new token for simple authentication.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="activationId" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="signatureType" type="tns:SignatureType" minOccurs="1" maxOccurs="1"/>
                <xs:element name="ephemeralPublicKey" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="CreateTokenResponse">
        <xs:annotation>
            <xs:documentation>Response for obtaining a new token for simple authentication.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="encryptedData" type="xs:string" minOccurs="1" maxOccurs="1"/>
                <xs:element name="mac" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- PowerAuth Enumerations //-->

    <xs:simpleType name="ActivationStatus">
        <xs:annotation>
            <xs:documentation>Enum representing the possible activation states (CREATED, PENDING_COMMIT, ACTIVE, BLOCKED,
                REMOVED).
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="CREATED"/>
            <xs:enumeration value="PENDING_COMMIT"/>
            <xs:enumeration value="ACTIVE"/>
            <xs:enumeration value="BLOCKED"/>
            <xs:enumeration value="REMOVED"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="SignatureType">
        <xs:annotation>
            <xs:documentation>Enum representing the possible signatures types by the authentication factors used.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="POSSESSION"/>
            <xs:enumeration value="KNOWLEDGE"/>
            <xs:enumeration value="BIOMETRY"/>
            <xs:enumeration value="POSSESSION_KNOWLEDGE"/>
            <xs:enumeration value="POSSESSION_BIOMETRY"/>
            <xs:enumeration value="POSSESSION_KNOWLEDGE_BIOMETRY"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="KeyValueMap">
        <xs:sequence>
            <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="key" type="xs:string"/>
                        <xs:element name="value" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

</xs:schema>
